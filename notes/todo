bug: highlighting: double quotes inside block-comments
bug: highlighting: backslash inside a string
bug: highlighting: line comment & preprocessor directive
bug: if we cant open a file, we shouldnt end up with a gtk error...
bug: unindenting a block of code is buggy


 bash commands: locate [pattern], sudo updatedb (fast). quickly opening files?

plausable feature: searching limited to a specific scope somehow? like only inside a function... we have that and we use { and }, but what about "scoping" by block/paragraph? Another thing is that this is a very language specific feature..

search depth! when i want to find something i have pieces of information. i may for example know, that its a hidden file.. narrowing down the possibilities seems to be very good performance-wise. large resultsets render the application unresposive, can something be done? large number of results isnt very helpful anyways -- display only some of them? some results are total bogus -- needs investigation. search used to crash, is this gone?

plausable feature: easy way to find & open files by name... in search-in-files we could filter by file name while leaving the search phrase empty (it makes sense to think about an empty string this way) and the results would be just clickable file names? use command entry somehow?
just filebrowser and some entry for typing filenames and a list of suggestions, no open-dialog as it becomes simply redundant..?
its more adequate to think about whats currently reffered to as command-entry as jumpto-entry instead.. jump to a line, jump to a file..

plausable feature: keeping file browser up-to-date with fs-changes


ctrl + <left/right>, what about ctrl + <up/down>? We have that and we scroll and its quite cool (dont know if more efficient)..
alt+up/down.. what about alt+left/right (moving word/s / character/s around)?
when highlighting we divide the file into tokens, when undoing we would maybe like to undo by a token, when jumping around we would like to jump by a token..
..also open a file by copy-pasting full path

plausable feature: indent when opening a line
plausable feature: delete end of line
plausable feature: select a whole line when triple-clicking on a wrapped line
plausable feature: consider keeping the cursor offset when deleting a line?

plausable feature: tabs, file changes on disk...
plausable feature: opening & highlighting large files is really slow and ui becomes unresponsive (but it eventually manages to do it)

in progress: highlighting... 4 different languages and how to support that?

plausable feature: conf-file 4 key-combinations

when all tabs are closed, sidebar's back-button might receive focus.
When sidebar's back-button is focus then hitting enter triggers a button-pressed-event which changes the root directory.
Unless we are root, we can not read contents of the root directory,
(or some directories inside the root directory rather) 
so if we hit enter multiple times then eventually we reach at the root directory which causes an assertion to fail..
so that's no good.
We should have error handling for permission-related things..
auto-closing parenthesis, quotes etc. could be done at buffer-insert level (?)

bug: stopping a "large search" ? spaces in file/directory names? not searching in root?


search-in-files crash when searching for "search" in home dir:
...
create_search_result_widgets()
on_app_window_key_press(): hardware keycode: 46
*** Error in `./a.out': free(): invalid pointer: 0x00007f3b43104d00 ***
buildandrun.sh: line 1: 22801 Aborted                 (core dumped) ./a.out

* open-file-dialog: up arrow
* open-file-dialog: files and directories should be differentiable or maybe we'll drop directories entirely...
* search-in-files button icons
